- name: create nginx directories...
  become: yes
  become_method: sudo
  file: path=./nginx/data/etc/sites state=directory owner=core group=core
  # file: path=./nginx owner=core group=core mode=0755 recurse=yes
    
- name: copy nginx.config...
  become: yes
  become_method: sudo
  template: src=nginx.j2  dest=./nginx/data/etc/nginx.conf owner=core group=core

- name: copy certbot.conf...
  template: src=certbot.j2  dest=./nginx/data/etc/certbot.conf owner=core group=core
  register: site_config
  
- name: copy mime.types...
  template: src=mime.j2  dest=./nginx/data/etc/mime.types owner=core group=core 

- name: nginx sites-availabe...
  template: src=site.j2  dest=./nginx/data/etc/sites/{{ domain }} owner=core group=core

- name: copy ssl.conf...
  template: src=ssl.j2  dest=./nginx/data/etc/ssl.conf owner=core group=core  

- name: copy dhparam.pem
  copy: src=dhparam.pem dest=./nginx/data/etc/dhparam.pem
  
- name: create certbot directories...
  file: path=./certbot/data/var-lib state=directory owner=core group=core

- name: create certbot directories...
  file: path=./certbot/data/webroot state=directory owner=core group=core

- name: create certbot directories...
  file: path=./certbot/data/etc state=directory owner=core group=core

- name: create certbot directories...
  file: path=./certbot/data/log state=directory owner=core group=core    
  
- name: build nginx container...
  become: yes
  become_user: core
  docker_container:
    name: nginx
    image: nginx:latest
    state: started
    restart: yes
    ports:
      - "80:80"
      - "443:443"
    network_mode: bridge
    volumes:
      # nginx
      - ./nginx/data/etc:/etc/nginx:ro
      - ./nginx/data/log:/var/log/nginx
      # certbot (SSL)
      - ./certbot/data/webroot:/acme-challenge:ro
      - ./certbot/data/etc:/etc/letsencrypt:ro
    networks:
      - name: "{{ network_name }}"
        ipv4_address: 172.16.100.100
  register: nginx
  
# - name: certbot
#   environment:
#     DOMAIN: "{{ domain }}"
#     EMAIL: "{{ email }}"
#   script: certbot.sh
  
- name: nginx sites-availabe...
  template: src=server.j2  dest=./nginx/data/etc/sites/{{ domain }} owner=core group=core
  
- name: nginx restart
  shell: docker restart nginx